# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Airport @model 
  @aws_iam
  @auth(rules: [
    { allow: public, provider: iam, operations: [create, read, update] },
    { allow: private, operations: [create, read, update] }
  ]) 
{
  uid: String! @primaryKey
  name: String
  icao: String
  lat: Float
  lng: Float
  alt: Int
  SIDs: [SID] @hasMany
  STARs: [STAR] @hasMany
}

type Waypoint @model 
  @aws_iam
  @auth(rules: [
    { allow: public, provider: iam, operations: [create, read, update] },
    { allow: private, operations: [create, read, update] }
  ]) 
{
  uid: String! @primaryKey
  name: String
  lat: Float
  lng: Float
  SIDs: [SID] @manyToMany(relationName: "SIDWaypoint")
  STARs: [STAR] @manyToMany(relationName: "STARWaypoint")
}

type SID @model 
  @aws_iam
  @auth(rules: [
    { allow: public, provider: iam, operations: [create, read, update] },
    { allow: private, operations: [create, read, update] }
  ]) 
{
  name: String! @primaryKey
  airportUID: String
  airport: Airport @belongsTo(fields: ["airportUID"])
  waypoints: [Waypoint] @manyToMany(relationName: "SIDWaypoint")
}

type STAR @model 
  @aws_iam
  @auth(rules: [
    { allow: public, provider: iam, operations: [create, read, update] },
    { allow: private, operations: [create, read, update] }
  ]) 
{
  name: String! @primaryKey
  airportUID: String
  airport: Airport @belongsTo(fields: ["airportUID"])
  waypoints: [Waypoint] @manyToMany(relationName: "STARWaypoint")
}

type Query {
  loadData: AWSJSON @aws_cognito_user_pools @aws_iam @function(name: "thalesApi-${env}")
  getTopAirportSID(top: Int, airportIcaos: [String]): AWSJSON @aws_cognito_user_pools @aws_iam @function(name: "thalesApi-${env}")
  getTopAirportSTAR(top: Int, airportIcaos: [String]): AWSJSON @aws_cognito_user_pools @aws_iam @function(name: "thalesApi-${env}")
}